;;; Automatically generated on Wed Aug  1 11:14:01 2018
;;; Invoked by byron@Byronwangs-MacBook-Pro.local using 26.1
(setq-default kill-ring '(" Symbol’s value as variable is void: helm-alive-p" "(require 'cc-mode)" "apply: Symbol’s value as variable is void: helm-alive-p" "https://s3.amazonaws.com/propeller-internal-releases/Abstract-73.0.3.dmg" #("export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;" 0 39 (fontified t) 39 40 (fontified t face font-lock-comment-delimiter-face) 40 80 (fontified t face font-lock-comment-face) 80 81 (fontified t rear-nonsticky t face font-lock-comment-face)) "export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;"))
(setq-default session-file-alist '(("~/.emacs.d/lisp/init-kuma.el" 892 35 1 nil nil 892 (overwrite-mode)) ("~/.emacs.d/init.el" 917 81 1 nil nil 564 (overwrite-mode)) ("~/.org-jira/DCE.org" 2674 1 1 nil nil 2675 (overwrite-mode)) ("~/Documents/org/GTD.org" 39 26122 1 nil nil 1799 (overwrite-mode)) ("~/.emacs.d/.git/COMMIT_EDITMSG" 12 nil 1 nil nil 12 (overwrite-mode)) ("~/Documents/org/.git/COMMIT_EDITMSG" 13 nil 1 nil nil 13 (overwrite-mode)) ("~/.zshrc" 3393 nil 1 nil nil 3481 (overwrite-mode)) ("~/Documents/daocloud/dce-engine/dce_engine/cli/commands/install.py" 2446 2446 1 nil nil 2446 (overwrite-mode)) ("~/Documents/daocloud/dce-engine/dce_engine/cli/commands/uninstall.py" 3570 6490 1 nil nil nil (overwrite-mode)) ("~/Documents/daocloud/dce-engine/README.md" 229 nil 1 nil nil 1 (overwrite-mode)) ("~/.emacs.d/lisp/init-ibuffer.el" 1818 1 1 nil nil 1819 (overwrite-mode))))
(setq-default file-name-history '(#("/Users/byron/.emacs.d/lisp/init-kuma.el" 0 39 (ivy-index 12)) #("/Users/byron/.emacs.d/init.el" 0 29 (ivy-index 1)) #("/Users/byron/Documents/daocloud/dce-engine/dce_engine/engine.py" 0 63 (ivy-index 14)) #("/Users/byron/Documents/daocloud/dce-engine/" 0 43 (ivy-index 0)) #("/Users/byron/.emacs.d/lisp/init-ibuffer.el" 0 42 (ivy-index 9)) "~/.org-jira/DCE.org" "~/Documents/org/GTD.org" #("/Users/byron/Documents/org/GTD.org" 0 34 (ivy-index 4)) "~/Documents/daocloud/dce-engine/dce_engine/cli/commands/install.py" #("/Users/byron/.zshrc" 0 19 (ivy-index 3)) "~/Documents/daocloud/dce-engine/dce_engine/cli/commands/uninstall.py" #("/Users/byron/Documents/daocloud/dce-engine/README.md" 0 52 (ivy-index 0)) "~/Documents/daocloud/dce-engine/dce_engine/client/base_client.py" #("/Users/byron/Documents/daocloud/dce-engine/contrib/" 0 51 (ivy-index 0)) #("/Users/byron/.org-jira/DCE.org" 0 30 (ivy-index 4))))
(setq-default search-ring '("raise e"))
(setq-default buffer-name-history '("*terminal<1>*" "*terminal<3>*"))
(setq-default command-history '((sr-speedbar-open) (org-jira-get-issues-by-board) (magit-blame) (goto-line 900 nil) (goto-line 100 nil) (kill-buffer "*terminal<1>*") (kill-buffer "*terminal<3>*") (org-jira-add-comment "hahah") (org-jira-get-issues nil) (org-jira-refresh-issues-in-buffer) (org-jira-refresh-issue) (org-jira-update-issue) (org-jira-update-worklogs-from-org-clocks) (org-jira-update-worklog) (org-jira-add-comment "hahahah") (org-jira-update-comment) (org-jira-todo-to-jira) (org-jira-add-comment "doing") (goto-line 28 nil)))
(setq-default counsel-M-x-history '(#("sr" 0 2 (ivy-index 0)) #("jira-get" 0 8 (ivy-index 3)) #("sr-s" 0 4 (ivy-index 0)) #("sr-" 0 3 (ivy-index 1)) #("magit-blame" 0 11 (ivy-index 0)) #("jira-add" 0 8 (ivy-index 0)) #("jira-ge" 0 7 (ivy-index 3)) #("jira" 0 4 (ivy-index 10)) #("refres" 0 6 (ivy-index 1)) #("refr" 0 4 (ivy-index 0)) #("jira-get-" 0 9 (ivy-index 3)) #("issue" 0 5 (ivy-index 16)) #("jira-upda" 0 9 (ivy-index 3)) #("jira-up" 0 7 (ivy-index 2)) #("jira-" 0 5 (ivy-index 28)) #("jira-ad" 0 7 (ivy-index 0)) #("jira-to" 0 7 (ivy-index 0)) #("jira-re" 0 7 (ivy-index 1))))
(setq-default counsel-git-grep-cmd-history '("git --no-pager grep --full-name -n --no-color -i -e \"%s\""))
(setq-default ivy-history '("*Messages*" #("sc" 0 2 (ivy-index 0)) "GTD.org" #("s" 0 1 (ivy-index 1)) "base_client.py:78: self._raise_for_status(response)" #("requi" 0 5 (ivy-index 0))))
(setq-default minibuffer-history '("900" "100" "hahah" "hahahah" "doing" "28"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-jira-boards-read-history '("Byron's"))
(setq-default serial-name-history '("/dev/ttys0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
